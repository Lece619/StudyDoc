정규화
	삽입/ 수정/ 삭제의 이상현상을 제거
	데이터의 중복 최소화
	대부분 3차 정규화까지만 진행
	--이상 더욱 진행시 너무많아짐

1차 정규화(1NF)
	하나의 컬럼에 값이 1개씩만 있어야 한다.
	반복적인 컬럼 값이 나타나는 경우
	
	상품명 
	바지1 바지2 바지3
	*검색이 힘들다.
	
-정규화 진행
	상품명
	바지1
	바지2
	바지3

2차 정규화(2NF)
	테이블의 모든 컬럼이 서로 관계가 있어야 한다.
	모든 컬럼이 서로 관계가 없는 경우 
	
	USER
	이름 	나이 	상품명
	한동석	10 	바지
	홍길동	11 	치마
	이순신	12 	자켓
-정규화 진행
	
	USER
	이름	나이
	한동석	10
	홍길동	11
	이순신	12	
	
	PRODUCT
	나이 	상품명
	10	바지
	11	치마
	12	자켓

3차 정규화 (3NF)
	이름	시	구	동	우편번호
	한동석	남양주	화도읍	구암리	12345
	홍길동	서울시	관악	봉천	44332

	-우편번호만 알고 있어도 시 구 동을 알 수 있다.
	*중복된 데이터가 생길 가능성이 있다.

-정규화 진행
	이름	우편번호
	한동석	12345
	홍길동	44332
	
	우편번호	시	구	동
	12345	남양주	화도읍	구암리
	44332	서울시	관악	봉천

-------------------------------------------------------------------------------------------------
데이터 베이스 에서 정규화가 필요한 이유

	데이터베이스를 잘못 설계하면 불필요한 데이터 중복으로 인해 
	공간이 낭비된다. 이러한 현상을 이상(Anomaly)라고 한다.
	회원번호와 프로젝트 코드 두 컬럼의 조합키로 설정되어 있는 테이블이고
	한 사람은 하나의 부서만 가질 수 있다.
	
	회원번호	이름	부서	프로젝트코드	급여	부서별명수
	21060601	한동석	개발팀	ABC0001		3000	4
	21060601	한동석	개발팀	CBA1112		2000	4
	21060601	한동석	개발팀	EFD1231		4000	4
	21060603	홍길동	기획팀	HAS2121		5000	2
	21060604	이순신	디자인팀	MDF123		7000	3

이상현상의 종류
	-삽입 이상
		새 데이터를 삽입하기 위해 불필요한 데이터도 삽입해야 하는 문제
		담당 프로젝트가 정해지지 않은 사원이 있다면,
		프로젝트 코드에 NULL을 작성할 수 없으므로 이 사원은 테이블에 추가될 수
		없다. 따라서 '미정'이라는 프로젝트 코드를 따로 만들어서 삽입해야 한다.

	-갱신 이상
		중복 행 중 일부만 변경하여 데이터가 불일치하게 되여 모순의 문제
		한 명의 사원은 반드시 하나의 부서에만 속할 수 있다.
		만약 "한동석"이 보안팀으로 부서를 옮길 수 3개 모두 갱신해주지 않는다면
		개발팀인지 보안팀인지 알 수 없다.
		이러한 현상을 갱신 이상이라고 한다.

	-삭제 이상
		행을 삭제하면 꼭 필요한 데이터까지 함께 삭제되는 문제
		이순신이 담당한 프로젝트를 박살내서 드랍된다면 이순신행을 모두 삭제하게 된다.
		따라서 프로젝트에서 드랍되면 정보를 모두 드랍하게 된다.
		이러한 현상을 삭제 이상이라고 한다.
	
	이러한 이상 현상이 발생하는 이유는 테이블이 정규화가 되어 있지 않기 때문이다.
	정규화를 진행하기 위해서는 각 컬럼간의 관련성을 파악해야 하고, 이 관련성을 
	"함수적 종속성" (Functional Dependecy)이라고 한다.
	따라서 하나의 테이블에서는 하나의 함수적 종속성만 존재하도록 정규화를 한다.

	함수
	X -> Y 
	X : 결정자 - X가 Y를 결정
	Y : 종속자 - X에 대해 종속되어 있다 의존성이 있다.

----------------------------------------------------------------------------------------------------------------
NULL
	정의되지 않은 값
	빈 값 대신 미정값을 부여할 때 사용 (PK는 불가능, FK는 가능)

NOT NULL 제약조건
	ALTER TABLE 테이블명 MODIFY 컬럼명 NOT NULL;

제약조건 삭제
	ALTER TABLE 테이블명 DROP CONSTRAINT 제약조건 이름;

조건식
	컬럼명 IS NULL	: 컬럼값이 NULL이면 참
	컬러명 IS NOT NULL : 컬럼값이 NULL이 아니면 참

NULL 값을 다른 값으로 변경
	NVL()	: NULL값 대신 다른 값으로 변경 후 검색
	NVL2()	: NULL일 때의 값, NULL이 아닐 때의 값을 각각 설정









